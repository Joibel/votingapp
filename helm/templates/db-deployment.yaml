{{- if or (not .Values.nats) (eq .Values.nats "disabled") }} 
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - image: postgres:15.1-alpine3.17
          name: postgres
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: password
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            tcpSocket:
              port: 5432
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 128Mi 
              cpu: 100m
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            {{- if .Values.db_persistence }}{{- if eq .Values.db_persistence "enabled" }}
            - mountPath: /var/lib/postgresql/data
              name: data
            {{- end }}{{- end }}
            - mountPath: /var/run/postgresql
              name: run
      volumes:
        {{- if .Values.db_persistence }}{{- if eq .Values.db_persistence "enabled" }}
        - name: data
          persistentVolumeClaim:
            claimName: db
        {{- end }}{{- end }}
        - name: run
          emptyDir: {}
{{- end }}
