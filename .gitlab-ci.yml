stages:
  - release
  - build
  - config
  - helm

release:
  image: node:18
  stage: release
  script:
    - touch CHANGELOG.md
    - npm install @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog
    - npx semantic-release
  artifacts:
    paths:
      - CHANGELOG.md
  rules:
  - if: '$CI_COMMIT_BRANCH == "master"'
    changes:
    - helm/**/*
    - acorn/Acornfile
    - .gitlab-ci.yml

build and push acorn app:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/3.7.1-kube-1.20.11-alpine-3.14
  stage: build
  services:
    - name: registry.gitlab.com/gitlab-org/cluster-integration/test-utils/k3s-gitlab-ci/releases/v1.27.1-k3s1
      alias: k3s
  script:
    - |
      git config --global user.email "devops@techwhale.io"
      git config --global user.name "TechWhale DevOps"
      git clone --depth 1 https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/voting-application/vote-ui.git
      git clone --depth 1 https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/voting-application/vote.git
      git clone --depth 1 https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/voting-application/worker.git
      git clone --depth 1 https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/voting-application/result.git
      git clone --depth 1 https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/voting-application/result-ui.git
    - apk upgrade
    - apk add -u curl
    - curl -f k3s:8081 > k3s.yaml
    - export KUBECONFIG=$(pwd)/k3s.yaml
    - sleep 30
    - curl https://get.acorn.io | sh
    - acorn install
    - acorn login -u "lucj" -p "$DOCKERHUB_PASSWORD" docker.io
    - cp acorn/Acornfile Acornfile
    - echo "About to build acorn image docker.io/lucj/voting:$CI_COMMIT_TAG"
    # - acorn build -t docker.io/lucj/voting:$CI_COMMIT_TAG -p linux/amd64 -p linux/arm64/v8 .
    - acorn build -t docker.io/lucj/voting:$CI_COMMIT_TAG . --build
    - acorn push docker.io/lucj/voting:$CI_COMMIT_TAG
  only:
    - tags

update config:
  stage: config
  image: lucj/ci:1.1
  script:
    - git config --global user.email "devops@techwhale.io"
    - git config --global user.name "TechWhale DevOps"
    - git remote add gitlab_origin https://oauth2:${GITLAB_TOKEN}@gitlab.com/voting-application/config.git 2>/dev/null
    # Helm chart version
    - yq -i ".version=\"${CI_COMMIT_TAG}\"" ./helm/Chart.yaml
    - git add ./helm/Chart.yaml
    # Acorn app tag
    - yq -i ".spec.image=\"docker.io/lucj/voting:${CI_COMMIT_TAG}\"" ./acorn/app.yaml
    - git add ./acorn/app.yaml   
    # Raw manifests
    - rm -rf manifests/*
    - mkdir manifests/databases manifests/nats /tmp/nats /tmp/databases
    - helm template helm --output-dir /tmp/databases
    - helm template helm --output-dir /tmp/nats --set nats=enabled
    - mv /tmp/databases/votingapp/templates/*.yaml manifests/databases
    - mv /tmp/nats/votingapp/templates/*.yaml manifests/nats
    - git add ./manifests
    # Commit and push changes to the master branch
    - git commit -m "Update app with tag $CI_COMMIT_TAG"
    - git push gitlab_origin HEAD:master -o ci.skip
  only:
    - tags

upload helm chart:
  stage: helm
  image: lucj/kubectl-helm
  script:
    - echo "about to package and push helm chart version $CI_COMMIT_TAG to DockerHub"
    - echo $DOCKERHUB_TOKEN | helm registry login registry-1.docker.io -u lucj --password-stdin
    - helm package helm --version $CI_COMMIT_TAG
    # Upload to DockerHub
    - helm push votingapp-$CI_COMMIT_TAG.tgz oci://registry-1.docker.io/lucj
    # Upload to Gitlab Package Registry
    - curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@votingapp-$CI_COMMIT_TAG.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"
  only:
    - tags