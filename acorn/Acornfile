name:        "Voting Application"
description: "Acorn running the VotingApp demo application"

labels: {
	application: "votingapp"
}

args: {
	replicas: 1
}

containers: {

	voteui: {
		labels: {
			component: "voteui"
		}
		if args.dev {
			dirs: "/usr/share/nginx/html": "./vote-ui"
		}
		build: {
			context: "./vote-ui"
		}
		ports: publish: "80/http"
		scale:  args.replicas
		memory: 128Mi
	}

	vote: {
		labels: {
			component: "vote"
		}
		build: {
			target:  std.ifelse(args.dev, "dev", "production")
			context: "./vote"
		}
		if args.dev {
			dirs: {
				"/app": "./vote"
			}
		}
		ports:  "5000/http"
		memory: 128Mi
	}

	redis: {
		labels: {
			component: "redis"
		}
		image: "redis:7.0.11-alpine3.18"
		ports: "6379/tcp"
		dirs: {
			if !args.dev {
				"/data": "volume://redis"
			}
		}
		memory: 128Mi
	}

	worker: {
		labels: {
			component: "worker"
		}
		build: "./worker/go"
		env: {
			"POSTGRES_USER":     "secret://db-creds/username"
			"POSTGRES_PASSWORD": "secret://db-creds/password"
		}
		memory: 128Mi
	}

	db: {
		labels: {
			component: "db"
		}
		image: "postgres:15.3-alpine3.18"
		ports: "5432/tcp"
		env: {
			"PGDATA":            "/var/lib/postgresql/data/db"
			"POSTGRES_USER":     "secret://db-creds/username"
			"POSTGRES_PASSWORD": "secret://db-creds/password"
		}
		dirs: {
			if !args.dev {
				"/var/lib/postgresql/data": "volume://db"
			}
		}
		memory: 128Mi
	}

	result: {
		labels: {
			component: "result"
		}
		build: {
			target:  std.ifelse(args.dev, "dev", "production")
			context: "./result"
		}
		if args.dev {
			dirs: "/app": "./result"
		}
		ports: "5000/http"
		env: {
			"POSTGRES_USER":     "secret://db-creds/username"
			"POSTGRES_PASSWORD": "secret://db-creds/password"
		}
		memory: 128Mi
	}

	resultui: {
		labels: {
			component: "resultui"
		}
		build: {
			target:  std.ifelse(args.dev, "dev", "production")
			context: "./result-ui"
		}
		if args.dev {
			dirs: "/app/src": "./result-ui/src"
		}
		ports: publish: "80/http"
		memory: 128Mi
	}
}

volumes: {
	if !args.dev {
		"db": {
			size: "100M"
		}
	}
	if !args.dev {
		"redis": {
			size: "100M"
		}
	}
}

jobs: {
	"seed": {
		build: {
			context: "./tools/seed"
		}
		schedule: "*/5 * * * *"
	}
}

secrets: {
	"db-creds": {
		type: "basic"
		params: {
			usernameLength:     6
			usernameCharacters: "a-zA-Z"
			passwordLength:     10
			passwordCharacters: "a-zA-Z0-9"
		}
		data: {
			username: ""
			password: ""
		}
	}
}
